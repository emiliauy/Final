package uiGrafica.jugador;

import InterfazUsuario.CU_IngresarAunaMesa.Controlador_MesasAbiertas;
import java.util.ArrayList;
import Modelo.Jugador;
import Modelo.MesaPoker;
import static java.awt.image.ImageObserver.ABORT;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import InterfazUsuario.CU_IngresarAunaMesa.Vista_MesasAbiertas;
import Modelo.PokerException;
import Modelo.Sesion;

/**
 *
 * @author Emilia
 */
public class MesasAbiertas extends javax.swing.JDialog implements Vista_MesasAbiertas {

    /**
     * Creates new form MesasAbiertas
     */
    private Controlador_MesasAbiertas controlador;
    private Sesion sesion;

    public MesasAbiertas(java.awt.Frame parent, boolean modal, Sesion sesion) {
        super(parent, modal);
        initComponents();
        this.sesion = sesion;
        Jugador usuario = (Jugador) sesion.getUsuario();
        setLocation(getLocation().x + 1000, getLocation().y + 50);
        controlador = new Controlador_MesasAbiertas(this, usuario, sesion);
        setTitle(controlador.obtenerTituloVentana());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_ingresarMesa = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_mesas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btn_ingresarMesa.setText("Ingresar");
        btn_ingresarMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ingresarMesaActionPerformed(evt);
            }
        });

        tabla_mesas.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tabla_mesas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        tabla_mesas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tabla_mesas);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Seleccione la mesa a la que desea unirse :");

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_ingresarMesa)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_ingresarMesa)
                    .addComponent(jButton1))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        salir();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_ingresarMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ingresarMesaActionPerformed
        // TODO add your handling code here:
        int op = tabla_mesas.getSelectedRow();
        if (op != -1) {
            int idMesa = (int) tabla_mesas.getValueAt(op, 0);
            controlador.ingresarMesaSeleccionada(idMesa);

        } else {
            mostrarError("Selecciona una mesa antes de ingresar.");
        }
    }//GEN-LAST:event_btn_ingresarMesaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        salir();
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_ingresarMesa;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabla_mesas;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mostrarMesasAbiertas(ArrayList<MesaPoker> mesasPoker) {
        if (mesasPoker == null || mesasPoker.isEmpty()) {
            mesasPoker = new ArrayList<>();
        }
        //seteo datos y metadatos (nombres de columas) , cantidad de filas y datos de cada una de las celdas
        DefaultTableModel datos = new DefaultTableModel();
        datos.addColumn("No.Mesa");
        datos.addColumn("# Jug.Requeridos");
        datos.addColumn("$ Luz");
        datos.addColumn("# Jugadores");
        datos.addColumn("% Comision");
        datos.setRowCount(ABORT); // limpia la tabla 
        int fila = 0;
        for (MesaPoker m : mesasPoker) {
            datos.setValueAt(m.getId(), fila, 0);
            datos.setValueAt(m.getJugadoresRequeridos(), fila, 1);
            datos.setValueAt(m.getLuz(), fila, 2);
            datos.setValueAt(m.getJugadoresMesa().size(), fila, 3);
            datos.setValueAt(m.getPorcentajeComision(), fila, 4);
            fila++;
        }
        tabla_mesas.setModel(datos);
    }

    @Override
    public void mostrarError(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "Error", JOptionPane.ERROR_MESSAGE);
    }

    @Override
    public void mostrarMensaje(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "Ã‰xito", JOptionPane.INFORMATION_MESSAGE);
    }

    @Override
    public void jugarAlPoker(MesaPoker mesa) {
        try {
            System.out.println("MESA antes" + mesa.getEstado() + sesion.getUsuario().getNombreCompleto());
            new JuegoPoker(mesa, sesion).setVisible(true);
            System.out.println("MESA despues" + mesa.getEstado() + sesion.getUsuario().getNombreCompleto());
        } catch (PokerException ex) {
            mostrarError("No se pudo iniciar el juego: " + ex.getMessage());
        }
    }

    @Override
    public void salir() {
        controlador.salir();
        dispose();
    }

    @Override
    public void cerrarVentanaSinLogout() {
        dispose();
    }
}
